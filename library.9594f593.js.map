{"mappings":"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","sources":["src/JS/localStorage.js","src/JS/library-markups.js","src/JS/library-main.js","src/JS/themeRender.js","src/library.js"],"sourcesContent":["function getFromLocalStorage(key) {\n  const savedMovies = localStorage.getItem(key);\n  return JSON.parse(savedMovies);\n}\n\nexport { getFromLocalStorage };\n","import { getFromLocalStorage } from './localStorage';\nexport { paginationMarkup, paginationMarkupMobile, markupMovies };\n\nfunction paginationMarkup(currentPage, pageCount) {\n  if (pageCount <= 1) return [1];\n  const center = [\n      currentPage - 2,\n      currentPage - 1,\n      currentPage,\n      currentPage + 1,\n      currentPage + 2,\n    ];\n\n    filteredCenter = center.filter(p => p > 1 && p < pageCount);\n    includeThreeLeft = currentPage === 5;\n    includeThreeRight = currentPage === pageCount - 4;\n    includeLeftDots = currentPage > 5;\n    includeRightDots = currentPage < pageCount - 4;\n\n  if (includeThreeLeft) filteredCenter.unshift(2);\n  if (includeThreeRight) filteredCenter.push(pageCount - 1);\n\n  if (includeLeftDots) filteredCenter.unshift('...');\n  if (includeRightDots) filteredCenter.push('...');\n\n  return [1, ...filteredCenter, pageCount];\n}\n\nfunction paginationMarkupMobile(currentPage, pageCount) {\n  if (pageCount <= 1) return [1];\n\n  const center = [\n    currentPage - 2,\n    currentPage - 1,\n    currentPage,\n    currentPage + 1,\n    currentPage + 2,\n  ];\n  \n  const filteredCenter = center.filter(p => p >= 1 && p <= pageCount);\n  includeTwoRight = currentPage === 1;\n  includeOneRight = currentPage === 2;\n\n  if (includeTwoRight) filteredCenter.push(currentPage + 3, currentPage + 4);\n  if (includeOneRight) filteredCenter.push(currentPage + 3);\n\n  return [...filteredCenter];\n}\n\nfunction markupMovies(films) {\n  return films\n    .map(\n      ({\n        title,\n        name,\n        poster_path,\n        genre_ids,\n        release_date,\n        first_air_date,\n        vote_average,\n        vote = vote_average.toFixed(1) || ' - ',\n        year = release_date || first_air_date || ' - ',\n      }) => {\n        const parseGenres = getFromLocalStorage('genres');\n        const genreName = genre_ids.map(element =>\n          parseGenres.genres.find(genre => genre.id === element)\n        );\n        let genreOutput;\n        if (genre_ids.length > 3) {\n          genreOutput = genreName.map(element => element.name).slice(0, 2);\n          genreOutput.push('інші');\n        } else {\n          genreOutput = genreName.map(element => element.name);\n        }\n\n        return `<li class=\"gallery__item\">\n                <a class=\"gallery__link\" href=\"\">\n                    <img class=\"gallery__image\" src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"\" loading=\"lazy\">\n                </a>\n                <div class=\"gallery__info\">\n                    <p class=\"gallery__title\">${title || name}</p>\n                    <p class=\"gallery__genre\">${genreOutput.join(', ')}</p>\n                    <p class=\"gallery__year\">${year.slice(0, 4)}</p>\n                    <p class=\"gallery__vote\">${vote}</p>\n                </div>\n            </li>`;\n      }\n    )\n    .join('');\n}\n","import {\n  paginationMarkup,\n  paginationMarkupMobile,\n  markupMovies,\n} from './library-markups';\nimport { getFromLocalStorage } from './localStorage';\n\nexport { pagination };\n\nconst moviesList = document.querySelector('.gallery');\nconst paginationNav = document.querySelector('.pagination__wrapper');\nconst paginationWrapper = document.querySelector('.pagination__pages');\nconst nextButton = document.querySelector('#next-button');\nconst prevButton = document.querySelector('#prev-button');\n\nlet currentPage;\nlet pageCount;\nconst paginationLimit = 20;\nlet movies = [];\n\n//Render and pagination\nfunction pagination(key) {\n  updateMovies(key);\n\n  if (movies.length === 0) {\n    paginationNav.classList.add('hidden');\n    return;\n  }\n\n  paginationNav.classList.remove('hidden');\n  pageCount = Math.ceil(movies.length / paginationLimit);\n  renderPage(1);\n\n  prevButton.addEventListener('click', () => {\n    renderPage(currentPage - 1);\n  });\n\n  nextButton.addEventListener('click', () => {\n    renderPage(currentPage + 1);\n  });\n\n  paginationWrapper.addEventListener('click', e => {\n    if (e.target.hasAttribute('page-index')) {\n      renderPage(Number(e.target.getAttribute('page-index')));\n    }\n  });\n}\n\nfunction updateMovies(key) {\n  movies = getFromLocalStorage(key);\n\n  if (movies === null) {\n    movies = [];\n    clearContainer(moviesList);\n    insertListItems('Oops...Nothing added.');\n    return;\n  }\n}\n\nfunction renderPage(pageNum) {\n  currentPage = pageNum;\n\n  const prevRange = (pageNum - 1) * paginationLimit;\n  const currRange = pageNum * paginationLimit;\n  const currentMovies = movies.slice(prevRange, currRange);\n  clearContainer(moviesList);\n  insertListItems(markupMovies(currentMovies));\n  window.scrollTo({\n    top: 0,\n    left: 0,\n    behavior: 'smooth',\n  });\n\n  window.innerWidth >= 768\n    ? getPaginationNumbers(paginationMarkup(currentPage, pageCount))\n    : getPaginationNumbers(paginationMarkupMobile(currentPage, pageCount));\n  handleActivePageNumber();\n  handlePageButtonsStatus();\n}\n\nfunction getPaginationNumbers(items) {\n  clearContainer(paginationWrapper);\n\n  const pages = items.map(item => {\n    if (typeof item === 'number') {\n      const pageNumber = document.createElement('button');\n      pageNumber.className = 'pagination__number';\n      pageNumber.innerHTML = item;\n      pageNumber.setAttribute('page-index', item);\n      pageNumber.setAttribute('aria-label', 'Page ' + item);\n      return pageNumber;\n    }\n\n    if (typeof item === 'string') {\n      const dots = document.createElement('span');\n      dots.innerHTML = item;\n      return dots;\n    }\n  });\n  paginationWrapper.append(...pages);\n}\n\nfunction insertListItems(items) {\n  moviesList.insertAdjacentHTML('beforeend', items);\n}\n\nfunction clearContainer(container) {\n  container.innerHTML = '';\n}\n\n// Handle pagination buttons\n\nfunction handleActivePageNumber() {\n  document.querySelectorAll('.pagination__number').forEach(button => {\n    button.classList.remove('active');\n\n    const pageIndex = Number(button.getAttribute('page-index'));\n\n    if (pageIndex === currentPage) {\n      button.classList.add('active');\n    }\n  });\n}\n\nfunction disableButton(button) {\n  button.classList.add('hidden');\n}\n\nfunction enableButton(button) {\n  button.classList.remove('hidden');\n}\n\nfunction handlePageButtonsStatus() {\n  if (currentPage === 1) {\n    disableButton(prevButton);\n  } else {\n    enableButton(prevButton);\n  }\n\n  if (pageCount === currentPage) {\n    disableButton(nextButton);\n  } else {\n    enableButton(nextButton);\n  }\n}\n","export { theme };\n\nconst themeRender = document.querySelector('#theme-day');\nconsole.log(themeRender);\n","import {\n  pagination\n}\n\nfrom './JS/library-main';\n\nimport {\n  theme\n}\n\nfrom './JS/themeRender';\n\nconst watchedButton=document.querySelector('.button_watched');\nconst queueButton=document.querySelector('.button_queue');\n\nwindow.addEventListener('load', pagination('QUEUE'));\n\nwatchedButton.addEventListener('click', e=> {\n    pagination(e.target.textContent);\n    queueButton.classList.remove('button_queue');\n    watchedButton.classList.add('button_queue');\n    watchedButton.classList.remove('button_watched');\n    queueButton.classList.add('button_watched');\n  }\n\n);\n\nqueueButton.addEventListener('click', e=> {\n    pagination(e.target.textContent);\n    watchedButton.classList.remove('button_queue');\n    queueButton.classList.add('button_queue');\n    queueButton.classList.remove('button_watched');\n    watchedButton.classList.add('button_watched');\n  }\n\n);"],"names":["$c4af67a14e52d4c8$export$602bc7b349337fec","key","savedMovies","localStorage","getItem","JSON","parse","$9ea8703dd5883883$export$a88ca8237831132f","currentPage","pageCount","filteredCenter","filter","p","includeThreeLeft","includeThreeRight","includeLeftDots","includeRightDots","unshift","push","$9ea8703dd5883883$export$abd042700647fb27","includeTwoRight","includeOneRight","$3b3286655c014117$var$moviesList","document","querySelector","$3b3286655c014117$var$paginationNav","$3b3286655c014117$var$paginationWrapper","$3b3286655c014117$var$nextButton","$3b3286655c014117$var$prevButton","$3b3286655c014117$var$currentPage","$3b3286655c014117$var$pageCount","$3b3286655c014117$var$movies","$3b3286655c014117$export$22fa394f3ba39578","$3b3286655c014117$var$clearContainer","$3b3286655c014117$var$insertListItems","$3b3286655c014117$var$updateMovies","length","classList","remove","Math","ceil","$3b3286655c014117$var$renderPage","addEventListener","e","target","hasAttribute","Number","getAttribute","add","pageNum","prevRange","currRange","currentMovies","slice","map","title","name","poster_path","genre_ids","release_date","first_air_date","vote_average","vote","toFixed","year","parseGenres","genreName","element","genres","find","genre","id","genreOutput","join","window","scrollTo","top","left","behavior","innerWidth","$3b3286655c014117$var$getPaginationNumbers","querySelectorAll","forEach","button","$3b3286655c014117$var$disableButton","$3b3286655c014117$var$enableButton","$3b3286655c014117$var$handlePageButtonsStatus","items","pages","item","pageNumber","createElement","className","innerHTML","setAttribute","dots","append","insertAdjacentHTML","container","$cce2741a0b4fce8d$var$themeRender","console","log","$ce3726a01b8ab25a$var$watchedButton","$ce3726a01b8ab25a$var$queueButton","textContent"],"version":3,"file":"library.9594f593.js.map"}