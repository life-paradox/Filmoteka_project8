{"mappings":"AAAO,MCCDA,EAAaC,SAASC,cAAc,aAK1C,WAEE,IAAIC,aAAaC,QAAQ,UAGpB,CACeC,WACpB,MAAMC,QAAiBC,MAAM,yGACvBC,QAAeF,EAASG,OAC9BC,QAAQC,IAAIH,GACZL,aAAaS,QAAQ,SAAUC,KAAKC,UAAUN,GAAQ,EAEpDO,E,ECVJ,GDkBsBV,WACpB,MAAMC,QAAiBC,MAAM,mHACvBS,QAAcV,EAASG,OAE7B,OADAC,QAAQC,IAAIK,GACLA,CAAK,ECpBd,GAAgBC,MDmChB,SAAqBD,GACnB,MAAME,EAASF,EAAMG,QAAQC,KAAI,EAACC,MAACA,EAAKC,YAAEA,EAAWC,UAAEA,EAASC,aAAEA,KAEnD,8JAEiEF,mIAGtCD,oDACAE,mDACDC,EAAaC,MAAM,EAAG,8CAGxDC,KAAK,IAEZ,OADA1B,EAAW2B,UAAYT,EAChBF,C,IClDyBC,MCV3B,SAAoBD,GAEzB,MAAMY,EAAgB3B,SAASC,cAAc,eAGvC2B,EAAab,EAAMc,YACnBC,EAAcf,EAAMgB,KAI1B,GAAoB,IAAhBD,EAAmB,CACrB,MAAMb,EAAS,yhBASyBW,2EAExCD,EAAcD,UAAYT,C,CAG5B,GAAoB,IAAhBa,EAAmB,CACrB,MAAMb,EAAS,uhBASyBW,2EAExCD,EAAcD,UAAYT,C,KCrCR,MACpB,MAAMe,EAAkBhC,SAASiC,eAAe,oBAC1CC,EAAQlC,SAASC,cAAc,UAC/BkC,EAAanC,SAASiC,eAAe,oBACxBjC,SAASiC,eAAe,oBAEhCG,iBAAiB,SAAS,KACnC,MAAMC,EAAaH,EAAMI,YACzBN,EAAgBO,YAAcF,CAAU,IAG1CF,EAAWC,iBAAiB,SAAS,KACnC,MAAMC,EAAaH,EAAMI,YACzBN,EAAgBO,YAAcF,CAAU,GACxC,EFFJ","sources":["src/JS/api-key.js","src/JS/main.js","src/index.js","src/JS/pagination.js","src/JS/slider.js"],"sourcesContent":["export const API_KEY = '861782ee1fc6aacf939bc06e51306075';\n","import { API_KEY } from \"./api-key\";\nconst galleryRef = document.querySelector(\".gallery\");\n\n// фетч жанров\n\n// https://api.themoviedb.org/3/genre/movie/list?api_key=861782ee1fc6aacf939bc06e51306075&language=uk-UA\nfunction genres() {\n\n  if (localStorage.getItem(\"genres\")) {\n  return\n  }\n  else {\n  const fetchGenres = async () => {\n  const response = await fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}&language=uk-UA`);\n  const genres = await response.json();\n  console.log(genres);\n  localStorage.setItem(\"genres\", JSON.stringify(genres));\n    };\n    fetchGenres();\n}\n}\nexport { genres };\n\n\n\n// Фетч популярных фильмов\nconst fetchPopFilms = async () => {\n  const response = await fetch(`https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}&language=uk-UA&page=1`);\n  const films = await response.json();\n  console.log(films);\n  return films;\n};\nexport { fetchPopFilms };\n\n  \n  // фетч по ключевому слову\n  const fetchQueryFilm = async (query) => {\n  const response = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=uk-UA&query=${query}&page=1&include_adult=false`);\n  const films = await response.json();\n  console.log(films);\n  return films;\n};\nexport { fetchQueryFilm };\n  \n  // Рендер карточек\nfunction renderFilms(films) {\n  const markup = films.results.map(({title, poster_path, genre_ids, release_date\n  }) => {\n          return `<li class=\"gallery__item\">\n            <a class=\"gallery__link\" href=\"\">\n                <img class=\"gallery__image\" src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"\" loading=\"lazy\">\n            </a>\n            <div class=\"gallery__info\">\n                <p class=\"gallery__title\">${title}</p>\n                <p class=\"gallery__genre\">${genre_ids}</p>\n                <p class=\"gallery__year\">${release_date.slice(0, 4)}</p>\n            </div>\n        </li>`\n      }).join('');\n  galleryRef.innerHTML = markup; \n  return films;\n}\nexport { renderFilms };","import { fetchPopFilms, renderFilms } from './JS/main';\nimport { renderFilms } from './JS/main';\nimport { slider } from './JS/slider';\nimport { pagination } from \"./JS/pagination\";\nimport { fetchQueryFilm } from \"./JS/main\";\nimport { genres } from \"./JS/main\";\n\n\ngenres();\n\nfetchPopFilms().then(renderFilms).then(pagination);\n\nslider();\n\n","export function pagination(films) {\n\n  const paginationRef = document.querySelector(\".pagination\");\n\n\n  const totalPages = films.total_pages;\n  const currentPage = films.page;\n  const nextPage = currentPage + 1;\n  const prevPage = currentPage - 1;\n\n  if (currentPage === 1) {\n    const markup = `<button type=\"button\" class=\"prevPage\">&#10229;</button>\n    <button type=\"button\" class=\"curPage\">1</button>\n    <button type=\"button\" class=\"nextPage\">2</button>\n    <button type=\"button\" class=\"nextPage+2\">3</button>\n    <button type=\"button\" class=\"nextPage+3\">4</button>\n    <button type=\"button\" class=\"nextPage+4\">5</button>\n    <button type=\"button\" class=\"nextPage+5\">6</button>\n    <button type=\"button\" class=\"nextPage+6\">7</button>\n    <span>&#8728;&#8728;&#8728;</span>\n    <button type=\"button\" class=\"maxPage\">${totalPages}</button>\n    <button type=\"button\" class=\"nextPage\">&#10230;</button>`;\n    paginationRef.innerHTML = markup;\n  }\n  \n  if (currentPage === 2) {\n    const markup = `<button type=\"button\" class=\"prevPage\">&#10229;</button>\n    <button type=\"button\" class=\"prevPage\">1</button>\n    <button type=\"button\" class=\"curPage\">2</button>\n    <button type=\"button\" class=\"nextPage\">3</button>\n    <button type=\"button\" class=\"nextPage+2\">4</button>\n    <button type=\"button\" class=\"nextPage+3\">5</button>\n    <button type=\"button\" class=\"nextPage+4\">6</button>\n    <button type=\"button\" class=\"nextPage+5\">7</button>\n    <span>&#8728;&#8728;&#8728;</span>\n    <button type=\"button\" class=\"maxPage\">${totalPages}</button>\n    <button type=\"button\" class=\"nextPage\">&#10230;</button>`;\n    paginationRef.innerHTML = markup;\n  };\n\n\n\n\n\n}","export const slider = () => {\n  const slidesContainer = document.getElementById('slides-container');\n  const slide = document.querySelector('.slide');\n  const prevButton = document.getElementById('slide-arrow-prev');\n  const nextButton = document.getElementById('slide-arrow-next');\n\n  nextButton.addEventListener('click', () => {\n    const slideWidth = slide.clientWidth;\n    slidesContainer.scrollLeft += slideWidth;\n  });\n\n  prevButton.addEventListener('click', () => {\n    const slideWidth = slide.clientWidth;\n    slidesContainer.scrollLeft -= slideWidth;\n  });\n};\n"],"names":["$0e773294198e22c6$var$galleryRef","document","querySelector","localStorage","getItem","async","response","fetch","genres1","json","console","log","setItem","JSON","stringify","fetchGenres","films","then","markup","results","map","title","poster_path","genre_ids","release_date","slice","join","innerHTML","paginationRef","totalPages","total_pages","currentPage","page","slidesContainer","getElementById","slide","prevButton","addEventListener","slideWidth","clientWidth","scrollLeft"],"version":3,"file":"index.2c0d5747.js.map"}