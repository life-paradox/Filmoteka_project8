{"mappings":"AAAO,MCCDA,EAAaC,SAASC,cAAc,YA0BrB,MAUbC,EAAiBC,MAAOC,IAC9B,MAAMC,QAAiBC,MAAM,2GAAqFF,gCAC5GG,QAAcF,EAASG,OAE7B,OADAC,QAAQC,IAAIH,GACLA,CAAK,EAKA,SAALI,EAAYJ,GAEnB,MAAMK,EAAcC,aAAaC,QAAQ,UACnCC,EAAcC,KAAKC,MAAML,GAEzBM,EAASX,EAAMY,QAAQC,KAAI,EAACC,MAACA,EAAKC,YAAEA,EAAWC,UAAEA,EAASC,aAAEA,EAAYC,eAAEA,EAAcC,KAC5FA,EAAOF,GAAgBC,GAAkB,UAGzC,MAAME,EAAYJ,EAAUH,KAAIQ,GAC9Bb,EAAYc,OAAOC,MAAKC,GAASA,EAAMC,KAAOJ,MAC9C,IAAIK,EASA,OARCV,EAAUW,OAAS,GACtBD,EAAcN,EAAUP,KAAIQ,GAAUA,EAAQO,OAAMC,MAAM,EAAE,GAC5DH,EAAYI,KAAK,SAEjBJ,EAAcN,EAAUP,KAAIQ,GAAUA,EAAQO,OAIrC,8JAEiEb,mIAGtCD,sDAEAY,EAAYK,KAAK,4DAClBZ,EAAKU,MAAM,EAAG,6CAG3C,IACLE,KAAK,IAGZ,OAFA7B,QAAQC,IAAIH,EAAMY,SAClBpB,EAAWwC,UAAYrB,EAChBX,C,CAMTE,QAAQC,IAAIK,YAAYc,SA/ExB,WAEE,IAAIhB,aAAaC,QAAQ,UAGpB,CACeX,WACpB,MAAME,QAAiBC,MAAM,yGACvBkC,QAAenC,EAASG,OAC9BC,QAAQC,IAAI8B,GACZ3B,aAAa4B,QAAQ,SAAUzB,KAAK0B,UAAUF,GAAQ,EAEpDG,E,ECZJ,GDmBsBxC,WACpB,MAAME,QAAiBC,MAAM,mHACvBC,QAAcF,EAASG,OAE7B,OADAC,QAAQC,IAAIH,GACLA,CAAK,ECrBd,GAAgBqC,KAAKjC,GAAaiC,MCV3B,SAAoBrC,GAEzB,MAAMsC,EAAgB7C,SAASC,cAAc,eAGvC6C,EAAavC,EAAMwC,YACnBC,EAAczC,EAAM0C,KAI1B,GAAoB,IAAhBD,EAAmB,CACrB,MAAM9B,EAAS,yhBASyB4B,2EAExCD,EAAcN,UAAYrB,C,CAG5B,GAAoB,IAAhB8B,EAAmB,CACrB,MAAM9B,EAAS,uhBASyB4B,2EAExCD,EAAcN,UAAYrB,C,KDrB9B,MAAMgC,EAAUlD,SAASC,cAAc,uBACvCiD,EAAQC,iBAAiB,UACzB,SAAkBC,GAChBA,EAAEC,iBACF,MAAMC,EAAaJ,EAAQK,SAASC,YAAYC,MAAMC,OACtDjD,QAAQC,IAAI4C,GACO,KAAfA,GACFpD,EAAeoD,GAAYV,KAAKjC,E,IEvBd,MACpB,MAAMgD,EAAkB3D,SAAS4D,eAAe,oBAC1CC,EAAQ7D,SAASC,cAAc,UAC/B6D,EAAa9D,SAAS4D,eAAe,oBACxB5D,SAAS4D,eAAe,oBAEhCT,iBAAiB,SAAS,KACnC,MAAMY,EAAaF,EAAMG,YACzBL,EAAgBM,YAAcF,CAAU,IAG1CD,EAAWX,iBAAiB,SAAS,KACnC,MAAMY,EAAaF,EAAMG,YACzBL,EAAgBM,YAAcF,CAAU,GACxC,EFaJ","sources":["src/JS/api-key.js","src/JS/main.js","src/index.js","src/JS/pagination.js","src/JS/slider.js"],"sourcesContent":["export const API_KEY = '861782ee1fc6aacf939bc06e51306075';\n","import { API_KEY } from \"./api-key\";\nconst galleryRef = document.querySelector(\".gallery\");\n\n\n\n// фетч жанров\n\n// https://api.themoviedb.org/3/genre/movie/list?api_key=861782ee1fc6aacf939bc06e51306075&language=uk-UA\nfunction genres() {\n\n  if (localStorage.getItem(\"genres\")) {\n  return\n  }\n  else {\n  const fetchGenres = async () => {\n  const response = await fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}&language=uk-UA`);\n  const genres = await response.json();\n  console.log(genres);\n  localStorage.setItem(\"genres\", JSON.stringify(genres));\n    };\n    fetchGenres();\n}\n}\nexport { genres };\n\n\n// Фетч популярных фильмов\nconst fetchPopFilms = async () => {\n  const response = await fetch(`https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}&language=uk-UA&page=1`);\n  const films = await response.json();\n  console.log(films);\n  return films;\n};\nexport { fetchPopFilms };\n\n  \n  // фетч по ключевому слову\n  const fetchQueryFilm = async (query) => {\n  const response = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=uk-UA&query=${query}&page=1&include_adult=false`);\n  const films = await response.json();\n  console.log(films);\n  return films;\n};\nexport { fetchQueryFilm };\n  \n  // Рендер карточек\nfunction renderFilms(films) {\n\n  const savedGenres = localStorage.getItem(\"genres\");\n  const parseGenres = JSON.parse(savedGenres);\n  \n  const markup = films.results.map(({title, poster_path, genre_ids, release_date, first_air_date,\n    year = release_date || first_air_date || ' - ',\n  }) => { \n    \n    const genreName = genre_ids.map(element =>\n      parseGenres.genres.find(genre => genre.id === element));\n      let genreOutput;\n       if (genre_ids.length > 3) {\n        genreOutput = genreName.map(element=> element.name).slice(0,2);\n        genreOutput.push('інщі');\n       } else {\n        genreOutput = genreName.map(element=> element.name);\n       }\n\n      //console.log(genreOutput);\n          return `<li class=\"gallery__item\">\n            <a class=\"gallery__link\" href=\"\">\n                <img class=\"gallery__image\" src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"\" loading=\"lazy\">\n            </a>\n            <div class=\"gallery__info\">\n                <p class=\"gallery__title\">${title}</p>\n\n                <p class=\"gallery__genre\">${genreOutput.join(', ')}</p>     \n                <p class=\"gallery__year\">${year.slice(0, 4)}</p>\n\n            </div>\n        </li>`\n      }).join('');\n  console.log(films.results);\n  galleryRef.innerHTML = markup;\n  return films;\n}\nexport { renderFilms };\n\n//Парсінг жанрів\n\nconsole.log(parseGenres.genres);\n","import { fetchPopFilms, renderFilms } from './JS/main';\nimport { renderFilms } from './JS/main';\nimport { slider } from './JS/slider';\nimport { pagination } from \"./JS/pagination\";\nimport { fetchQueryFilm } from \"./JS/main\";\nimport { genres } from \"./JS/main\";\n\n\ngenres();\n\nfetchPopFilms().then(renderFilms).then(pagination);\n\n\n\n// поиск по ключевому слову\n\nconst formRef = document.querySelector(\".header-search-form\");\nformRef.addEventListener(\"submit\", onSearch);\nfunction onSearch(e) {\n  e.preventDefault();\n  const searchData = formRef.elements.searchQuery.value.trim();\n  console.log(searchData);\n  if (searchData !== '') {\n    fetchQueryFilm(searchData).then(renderFilms);\n  }\n}\n\nslider();","export function pagination(films) {\n\n  const paginationRef = document.querySelector(\".pagination\");\n\n\n  const totalPages = films.total_pages;\n  const currentPage = films.page;\n  const nextPage = currentPage + 1;\n  const prevPage = currentPage - 1;\n\n  if (currentPage === 1) {\n    const markup = `<button type=\"button\" class=\"prevPage\">&#10229;</button>\n    <button type=\"button\" class=\"curPage\">1</button>\n    <button type=\"button\" class=\"nextPage\">2</button>\n    <button type=\"button\" class=\"nextPage+2\">3</button>\n    <button type=\"button\" class=\"nextPage+3\">4</button>\n    <button type=\"button\" class=\"nextPage+4\">5</button>\n    <button type=\"button\" class=\"nextPage+5\">6</button>\n    <button type=\"button\" class=\"nextPage+6\">7</button>\n    <span>&#8728;&#8728;&#8728;</span>\n    <button type=\"button\" class=\"maxPage\">${totalPages}</button>\n    <button type=\"button\" class=\"nextPage\">&#10230;</button>`;\n    paginationRef.innerHTML = markup;\n  }\n  \n  if (currentPage === 2) {\n    const markup = `<button type=\"button\" class=\"prevPage\">&#10229;</button>\n    <button type=\"button\" class=\"prevPage\">1</button>\n    <button type=\"button\" class=\"curPage\">2</button>\n    <button type=\"button\" class=\"nextPage\">3</button>\n    <button type=\"button\" class=\"nextPage+2\">4</button>\n    <button type=\"button\" class=\"nextPage+3\">5</button>\n    <button type=\"button\" class=\"nextPage+4\">6</button>\n    <button type=\"button\" class=\"nextPage+5\">7</button>\n    <span>&#8728;&#8728;&#8728;</span>\n    <button type=\"button\" class=\"maxPage\">${totalPages}</button>\n    <button type=\"button\" class=\"nextPage\">&#10230;</button>`;\n    paginationRef.innerHTML = markup;\n  };\n\n\n\n\n\n}","export const slider = () => {\n  const slidesContainer = document.getElementById('slides-container');\n  const slide = document.querySelector('.slide');\n  const prevButton = document.getElementById('slide-arrow-prev');\n  const nextButton = document.getElementById('slide-arrow-next');\n\n  nextButton.addEventListener('click', () => {\n    const slideWidth = slide.clientWidth;\n    slidesContainer.scrollLeft += slideWidth;\n  });\n\n  prevButton.addEventListener('click', () => {\n    const slideWidth = slide.clientWidth;\n    slidesContainer.scrollLeft -= slideWidth;\n  });\n};\n"],"names":["$0e773294198e22c6$var$galleryRef","document","querySelector","$0e773294198e22c6$export$a869a31389217de6","async","query","response","fetch","films","json","console","log","$0e773294198e22c6$export$e98cbe51299acd52","savedGenres","localStorage","getItem","parseGenres","JSON","parse","markup","results","map","title","poster_path","genre_ids","release_date","first_air_date","year","genreName","element","genres","find","genre","id","genreOutput","length","name","slice","push","join","innerHTML","genres1","setItem","stringify","fetchGenres","then","paginationRef","totalPages","total_pages","currentPage","page","$1f0dc3b9307be026$var$formRef","addEventListener","e","preventDefault","searchData","elements","searchQuery","value","trim","slidesContainer","getElementById","slide","prevButton","slideWidth","clientWidth","scrollLeft"],"version":3,"file":"index.a76e7660.js.map"}